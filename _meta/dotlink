#!/usr/bin/env bash
# Create symlinks on macOS or Linux
# NOTE: .tmux.conf is mac only for now

# Install manually:
# ----------------------------------------

# chemacs2: git clone https://github.com/plexus/chemacs2 ~/.emacs.d
# cheovim: git clone https://github.com/NTBBloodbath/cheovim ~/.config/nvim

# tmux-fzf: https://github.com/sainnhe/tmux-fzf
# fisher: https://github.com/jorgebucaran/fisher

# vim-plug: https://github.com/junegunn/vim-plug
# fzf: https://github.com/jethrokuan/fzf

# ----------------------------------------

cd ~/dotfiles || {
    echo "~/dotfiles doesn't exist"
    return 1
}

_mkdir() {
    if [ ! -e "$1" ] ; then
        mkdir "$1"
        echo "crated directory $1"
    fi
}

_mkdir ~/.config/{fish,git,qutebrowser,vim,nvim,coc}
_mkdir ~/.w3m

_link() {
    [ ! -e "$1" ] && {
        echo "err: source file $1 doesn't exist" 1>&2
        return 0
    }

    [ ! -e "$(dirname "$2")" ] && {
        echo "err: dest dir $(dirname "$2") doesn't exist" 1>&2
        return 0
    }

    [ -e "$2" ] && {
        echo "# dest file \`$2\` already exists"
        return 0
    }

    _root=~/dotfiles
    ln -s "${_root}/${1}" "${2}"

    echo "linked: \`$2\` -> \`$1\`"
}

# terminal application
_link terminal/kitty                 ~/.config/kitty

# command line tools
_link tool/git/config                ~/.config/git/config
_link tool/tmux/.tmux.conf           ~/.tmux.conf

# shells
_link shell/bash/.bashrc             ~/.bashrc
_link shell/fish/config.fish         ~/.config/fish/config.fish

# editors
_link editor/vim/.vimrc              ~/.vimrc
_link editor/vim/.vimrc              ~/.config/nvim/init.vim

# languages
_link tool/cargo/config              ~/.cargo/config

# chemacs2 (Emacs)
_link editor/.emacs-profiles.el      ~/.emacs-profiles.el

# _link editor/emacs/conf              ~/.emacs.d/conf
# _link editor/emacs/init.el           ~/.emacs.d/init.el

# w3m
_link browser/w3m/bookmark.html      ~/.w3m/bookmark.html
_link browser/w3m/config             ~/.w3m/config
_link browser/w3m/keymap             ~/.w3m/keymap

if [ "$(uname)" == 'darwin' ] ; then
    _mkdir ~/.config/{karabiner,yabai,spacebar}

    _link macos/skhd/.skhdrc             ~/.skhdrc
    _link macos/yabai/yabairc            ~/.config/yabai/yabairc
    _link macos/spacebar/spacebarrc      ~/.config/spacebar/spacebarrc

    # Karabiner-Elements 

    # VSCode
    _link editor/vscode/settings.json       "$HOME/Library/Application Support/Code/User/settings.json"
    _link editor/vscode/keybindings.json   "$HOME/Library/Application Support/Code/User/keybindings.json"

    # qutebrpwser
    _link browser/qutebrowser/config.py  ~/.qutebrowser/config.py
    _link browser/qutebrowser/quickmarks ~/.qutebrowser/quickmarks
    # _link browser/qutebrowser/userscrips ~/.qutebrowser/userscripts
    # path to the greasemonkey scripts can be checked via `:version` (in the `Paths` section `data` value)
    # _link browser/qutebrowser/greasemonkey ~/Library/Application\ Support/qutebrowser/greasemonkey
    _link browser/qutebrowser/greasemonkey ~/.qutebrowser/greasemonkey

    # Firefox
else
    _mkdir ~/.config/nixpkgs

    _link nixos/nixpks/config.nix          "$HOME/.config/nixpkgs/config.nix"
    _link liunx/.xinitrc                   "$HOME/.xinitrc"

    # VSCode
    _link editor/vscode/settings.json      "$HOME/.config/Code/User/settings.json"
    _link editor/vscode/keybindings.json   "$HOME/.config/Code/User/keybindings.json"

    # Sublime

    # qutebrpwser
    _link browser/qutebrowser/config.py  ~/.config/qutebrowser/config.py
    _link browser/qutebrowser/quickmarks ~/.config/qutebrowser/quickmarks
    # _link browser/qutebrowser/userscrips ~/.qutebrowser/userscripts
    # path to the greasemonkey scripts can be checked via `:version` (in the `Paths` section `data` value)
    # _link browser/qutebrowser/greasemonkey ~/Library/Application\ Support/qutebrowser/greasemonkey

    # Firefox
fi

