# vim:fileencoding=utf-8:ft=conf

# --------------------------------------------------------------------------------
# References

# * `man tmux`
# * default bindings: https://gist.github.com/mzmonsour/8791835
# * ./README.md for table of key mappings

# tmux may not work perfectly with fish especially when you split your window:
# https://github.com/fish-shell/fish-shell/issues/5699

# --------------------------------------------------------------------------------
# Settings

# ----------------------------------------
# Setup

unbind-key -a      # unbind all the default key bindings
set -g prefix C-]  # the prefix
# set -g prefix C-q  # the prefix

# ----------------------------------------
# Configuration

bind r source-file ~/.tmux.conf \; display 'config reloaded'
bind : command-prompt -p '>'
bind ? list-commands

# bind t set status    # toggle status bar
bind c copy-mode     # mode
bind p paste-buffer  # mode
setw -g mode-keys vi # copy mode in Vi-like key bindings

# ----------------------------------------
# Special commands

bind-key space choose-session -Z  # list sessions in full screen and swtich to one of them
bind z resize-pane -Z             # zoom

# open a narrow terminal to the bottom of the pane
bind c-m split-window -v -c  "#{pane_current_path}" -l 4 \; select-pane -U

# ----------------------------------------
# Create / rename / close

bind c-w command-prompt -p '>' -I "new-window -c '#{pane_current_path}' -n " 
bind c-s command-prompt -p '>' -I 'new-session -s '
bind n   command-prompt -p '>' -I 'rename-window '
bind c-n command-prompt -p '>' -I 'rename-session '

bind x kill-pane
bind X kill-window
bind c-X kill-session

# ----------------------------------------
# Focus

# pane/focus (hjkl) while keeping the zoom state
bind h if -F "#{window_zoomed_flag}" "select-pane -L ; resize-pane -Z" "select-pane -L"
bind j if -F "#{window_zoomed_flag}" "select-pane -D ; resize-pane -Z" "select-pane -D"
bind k if -F "#{window_zoomed_flag}" "select-pane -U ; resize-pane -Z" "select-pane -U"
bind l if -F "#{window_zoomed_flag}" "select-pane -R ; resize-pane -Z" "select-pane -R"

# window/focus ([])
bind [ select-window -t :-
bind ] select-window -t :+
bind c-[ select-window -t :-
bind c-] select-window -t :+

# session/focus (C-[])
# next session -- ordered by name.
bind-key c-[ switch-client -p
bind-key c-] switch-client -n
# looks like oppsite but surely correct

# ----------------------------------------
# Resize

# balance
bind = sekect-layout even-vertiucal ; select-layout even-horizontal

# pane/resize (C-hjkl)
bind c-h resize-pane -L 12
bind c-j resize-pane -D 3
bind c-k resize-pane -U 3
bind c-l resize-pane -R 12

# ----------------------------------------
# Split

# window/split (wasd)
bind w split-window -v -c  "#{pane_current_path}" \; swap-pane -t -1 \; select-pane -D \; last-pane
bind a split-window -h -c  "#{pane_current_path}" \; swap-pane -t -1 \; last-pane
bind s split-window -v -c  "#{pane_current_path}"
bind d split-window -h -c  "#{pane_current_path}"

# ----------------------------------------
# Jump

# window/jump (TODO: use view order, not internal ID)
bind 1 select-window -t 0
bind 2 select-window -t 1
bind 3 select-window -t 2
bind 4 select-window -t 3
bind 5 select-window -t 4
bind 6 select-window -t 5
bind 7 select-window -t 6
bind 8 select-window -t 7
bind 9 select-window -t 8

# ----------------------------------------
# Swap

# pane/swap (HJKL)
bind H swap-pane -t -1
bind K swap-pane -t -1
bind L swap-pane -t +1
bind J swap-pane -t +1

# window/swap (qe)
bind q swap-window -t -1 \; select-window -t :-
bind e swap-window -t +1 \; select-window -t :+

